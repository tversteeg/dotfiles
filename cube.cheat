% Cube

# run mvp
cd ~/c/cube \
	&& killall cube \
	; git checkout develop \
	&& git pull \
	; ./build.sh -b -d \
	&& CUBE_LOG=release CUBE_MODULE_PATH=~/c/cube/modules build/bin/release/cube examples/mvp/mvp.cproject \
	; cd - > /dev/null

# run example
cd ~/c/cube \
	&& killall cube \
	; ./build.sh -b -d \
	&& CUBE_LOG=<log_level> CUBE_MODULE_PATH=~/c/cube/modules build/bin/debug/cube <example_project> \
	; cd - > /dev/null

# run example (gdb)
cd ~/c/cube \
	&& killall cube \
	; ./build.sh -b -d \
	&& CUBE_LOG=trace CUBE_MODULE_PATH=~/c/cube/modules gdb -ex=r --args build/bin/debug/cube <example_project> \
	; cd - > /dev/null

# run example (valgrind)
cd ~/c/cube \
	&& killall cube \
	; ./build.sh debug \
	&& CUBE_LOG=trace CUBE_MODULE_PATH=~/c/cube/modules valgrind --tool=memcheck --leak-check=yes --track-origins=yes build/bin/debug/cube <example_project> \
	; cd - > /dev/null

# run example (wine)
cd ~/c/cube \
	&& killall cube \
	; wine ~/c/<cube_installs> \
	&& wine 'C:/Program Files/Cube/IdGen.exe' -o 'C:/Program Files/Cube/local.cube_machine_id' \
	&& wine ~/c/KeyGen.exe $(date +"%s" --date="next year") -o 'C:/Program Files/Cube/cube.license' -I 'C:/Program Files/Cube/local.cube_machine_id' \
	&& CUBE_LOG=<log_level> CUBE_MODULE_PATH=~/c/cube/modules wine "C:/Program Files/Cube/Cube.exe" <example_project> \
	; cd - > /dev/null

# run test
cd ~/c/cube \
	&& killall cube \
	; ./build.sh -b -d \
	&& CUBE_LOG=<log_level> CUBE_MODULE_PATH=~/c/cube/modules build/bin/debug/cube <test_project> \
	; cd - > /dev/null

# run test (throttled)
cd ~/c/cube \
	&& killall cube \
	; ./build.sh -b -d \
	&& cpulimit -P ~/c/cube/build/bin/<log_level>/cube -l <cpu_percentage> -b \
	&& CUBE_LOG=<log_level> CUBE_MODULE_PATH=~/c/cube/modules build/bin/debug/cube <test_project> \
	; killall cpulimit \
	; cd - > /dev/null

# add lua source file
cd ~/c/cube \
	&& touch <lua_module_subdirs>/<lua_source_file>.lua \
	&& git add <lua_module_subdirs>/<lua_source_file>.lua \
	; cd - > /dev/null

# nvim
cd ~/c/cube \
	&& nvim <lua_file> \
	&& git status \
	; cd - > /dev/null

$ log_level: printf "info\nwarn\ndebug\ntrace"
$ example_project: cd ~/c/cube && find examples -name "*.cproject" && find examples -name "*.lua"  | awk '{ print length(), $0 | "sort -n" }' | cut -d' ' -f2- ; cd - > /dev/null
$ test_project: cd ~/c/cube && find tests -name "*_test.lua" && cd - > /dev/null
$ lua_file: cd ~/c/cube && find modules -name "*.lua" && find . -name "premake5*.lua" ; cd - > /dev/null
$ lua_module_subdirs: cd ~/c/cube && find modules -type d ; cd - > /dev/null
$ cube_installs: cd ~/c && ls Cube*.exe ; cd - >/dev/null

% Cube, Jira

# create issue
jira create -p NC -i <issue_type>

$ issue_type: printf "Bug\nTask\nStory"

% Cube, Git

# pull
cd ~/c/cube \
	&& git pull \
	; cd - > /dev/null

# checkout develop
cd ~/c/cube \
	&& git checkout develop \
	&& git pull \
	; cd - > /dev/null

# checkout
cd ~/c/cube \
	&& git checkout <branch> \
	&& git pull \
	; cd - > /dev/null

# commit all
cd ~/c/cube \
	&& git add -A \
	&& git commit -m "$(echo '<jira_key>' | cut -f1 -d' ') <commit_message>" \
	&& git fetch \
	&& git merge origin/develop \
	&& jira trans "In Progress" $(echo '<jira_key>' | cut  -f1 -d':') --noedit
	; cd - > /dev/null

# pr
cd ~/c/cube \
	&& git push \
	|| git flow publish \
	&& curl -su thomas.versteeg:$(pass Work/thomas.versteeg@nepgroup.com) -X POST -H "Content-Type: application/json" --data "\"title\":\"$(echo '<pull_request_title>' | jq)\",\"state\":\"OPEN\",\"open\":true,\"closed\":false,\"fromRef\":{\"id\":\"refs/heads/$(git rev-parse --abbrev-ref HEAD)\"},\"toRef\":\"id\":\"refs/heads/develop\"},\"reviewers\":[{\"user\":{\"name\":\"maurits.lam\"}},{\"user\":\"name\":\"marino.rottier\"}}]}" https://bitbucket.twobridges.io/rest/api/latest/projects/GDCUBE/repos/cube/pull-requests \
	&& jira trans "Review" $(echo '<jira_key>' | cut  -f1 -d':') --noedit \
	; cd - >/dev/null

# new branch from current branch
cd ~/c/cube \
	&& git checkout -b feature/<feature_name> \
	; cd - > /dev/null

# new branch from develop
cd ~/c/cube \
	&& git checkout develop \
	&& git pull \
	&& git checkout -b feature/<feature_name> \
	; cd - > /dev/null

$ pull_request_title: jira list -q "project=NC AND Sprint in openSprints() AND status != Closed"
$ branch: cd ~/c/cube && git branch | awk '{print $NF}' ; cd - > /dev/null
$ jira_key: echo NC-379: && jira list -q "project=NC AND Sprint in openSprints() AND status != Closed"

% Cube, Bindings

# generate
cd ~/c/cube-imgui-bindings && ./build.sh ~/c/cube && git diff ; cd - > /dev/null

# nvim
cd ~/c/cube-imgui-bindings && nvim <lua_file> ; cd - > /dev/null

$ lua_file: cd ~/c/cube-imgui-bindings && find . -maxdepth 1 -not -type d ; cd - > /dev/null

% Cube, Bindings, Git

# pull
cd ~/c/cube-imgui-bindings && git pull ; cd - > /dev/null

# update cimgui
cd ~/c/cube-imgui-bindings && git pull && git submodule update --remote ; cd - > /dev/null

% Cube, Docugen

# generate
cd ~/c/cube-docugen && cargo run --release -- -t ~/c/cube/book -e ~/c/cube/docs ~/c/cube/modules ~/c/cube/src/modules && xdg-open ~/c/cube/book/book/index.html ; cd - > /dev/null

# update repositories
cd ~/c/cube-docugen && git pull && cargo upgrade && cargo update && cargo test && cd lib && cargo upgrade && cargo test && cd ../lsp && cargo upgrade && cargo update && cargo test ; cd - > /dev/null

% Cube, Licensing

# mount share
sudo mount -t cifs //10.72.44.20/data_graphics /mnt/gfx-share/ -o user=thomas.versteeg -o vers=1.0 -o password=$(pass show Work/thomas.versteeg@nepgroup.com) -o uid=thomas

# generate
mkdir /tmp/license \
	&& cd /tmp/license \
	&& wine ~/c/keygen/<version>/Keygen.exe $(date +"%s" --date="<year_full><month_with_leading><day_with_leading>") -o cube.license -I ~/c/licenses/<license_input_file>.cube_machine_id \
	&& zip "<year_full><month_with_leading><day_with_leading> - Cube - GFX - <license_input_file>" cube.license \
	&& sudo cp /tmp/license/*.zip ~/c/license_share/ \
	; cd - > /dev/null \
	; rm -rf /tmp/license

# generate (local)
mkdir /tmp/license \
	&& cd /tmp/license \
	&& wine ~/c/keygen/<version>/Keygen.exe $(date +"%s" --date="<year_full><month_with_leading><day_with_leading>") -o cube.license -I ~/c/licenses/<license_input_file>.cube_machine_id \
	; cd - > /dev/null \
	; rm -rf /tmp/license

$ version: ls ~/c/keygen
$ license_input_file: ls ~/c/licenses | grep cube_machine_id | cut -f 1 -d '.'
$ license_folder: ls ~/c/license_share
$ year_full: printf "2020\n2021\n2022\n2025\n2030\n2050"
$ month_with_leading: printf "01\n02\n03\n04\n05\n06\n07\n08\n09\n10\n11\n12"
